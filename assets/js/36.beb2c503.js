(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{523:function(t,s,a){t.exports=a.p+"assets/img/NativeRPC.55ab5af2.png"},524:function(t,s,a){t.exports=a.p+"assets/img/NativeRPC-UML.2e78c51a.svg"},525:function(t,s,a){t.exports=a.p+"assets/img/RPCMessage.b5a3ed02.png"},579:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),s("p",[t._v("现代 App 中通常会引入像 WebView、React Native、Flutter 这样的跨端解决方案，它们可以快速地实现功能的开发和上线。在使用这些方案时，都不可避免的会有一些功能需要使用 Native 能力，在涉及调用应用的 Native 能力的时候，它们都会采用一套自己独立的通信方式，对不同跨端方式提供 Native 能力的时候，不能实现完全的代码复用。本文主要介绍参考大厂相关跨端基建设计的一个统一跨端通信框架，对应用抹除跨端技术差异，实现 Native 资产复用。")]),t._v(" "),s("p",[t._v("源码地址：https://github.com/FeliksLv01/NativeRPCServiceKit")]),t._v(" "),s("h2",{attrs:{id:"整体架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整体架构"}},[t._v("#")]),t._v(" 整体架构")]),t._v(" "),s("p",[t._v("框架借鉴服务端 RPC 协议概念，设计了 NativeRPC 协议。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(523),alt:"NativeRPC"}})]),t._v(" "),s("p",[t._v("原生侧将应用的一些基础能力封装为 NativeRPCService，并注册到 ServiceCenter 中。跨端应用侧通过和原生侧建立 NativeRPCConnection，来实现 NativeRPC 的调用。")]),t._v(" "),s("p",[t._v("通信方面，跨端侧和原生侧都需要实现一个 NativeRPCStub，用于实现 RPC 请求和响应数据的解析和组装。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(524),alt:"UML"}})]),t._v(" "),s("h2",{attrs:{id:"通信协议部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信协议部分"}},[t._v("#")]),t._v(" 通信协议部分")]),t._v(" "),s("p",[s("img",{attrs:{src:a(525),alt:"Message"}})]),t._v(" "),s("p",[t._v("请求数据如下：")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_meta"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"callbackId"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15667769")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"method"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"addCourse"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"service"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"course.storage"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"params"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("meta 部分对应 UML 中的 NativeRPCMessageMeta，代表 RPC 消息的元数据。包含 callbackId 和 event 两个都是可空，分别对应正常调用和事件通知。callbackId 用于标记请求序列号，返回 Response 时，也需要带上 callbackId，用于跨端侧匹配回调。service 对应注册到 ServiceCenter 中的服务代号，method 是方法代号。params 是一个 map 类型的数据，在调用方法的是会传入。")]),t._v(" "),s("p",[t._v("response 数据如下：")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_meta"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"callbackId"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15667769")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"通信全流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信全流程"}},[t._v("#")]),t._v(" 通信全流程")]),t._v(" "),s("p",[t._v("TODO：")])])}),[],!1,null,null,null);s.default=n.exports}}]);